2%2
2%%2
3%%5
3.5%%1
3.5-3.5%%1
mean
mean(10,.3)
aux_mean(10,0.3)
prob
trials
trials
trials
trials
trials
mean
aux_mean = function(prob, trials) {
mean = trials*prob
return(mean)
}
aux_mean(10,.3)
aux_variance = function(prob, trials) {
v = sqrt(trials*prob*(1-prob))
return(v)
}
aux_variance(10,.3)
aux_variance = function(trials, prob) {
v = sqrt(trials*prob*(1-prob))
return(v)
}
aux_variance(10,.3)
aux_variance = function(trials, prob) {
v = (trials*prob*(1-prob))
return(v)
}
aux_variance(10,.3)
aux_mode = function(trials, prob) {
n = trials
p = prob
if((n*p+p)%%1==0) {
m = n*p+p
mode = c(m,m-1)
return(mode)
}
if((n*p+p)%%1!=0) {
m = n*p+p-((n*p+p)%%1)
return(m)
}
fgsdf
d
d
d
aux_mode = function(trials, prob) {
n = trials
p = prob
if((n*p+p)%%1==0) {
m = n*p+p
mode = c(m,m-1)
return(mode)
}
if((n*p+p)%%1!=0) {
m = n*p+p-((n*p+p)%%1)
return(m)
}
aux_mode(10,.3)
if((n*p+p)%%1!=0) {
m = n*p+p-((n*p+p)%%1)
return(m)
}
# Title: mode
# Description: calculate mode
# Input
#  trials: number of trials
#  prob: probability of success
# Output
#  mode: mode of success
aux_mode = function(trials, prob) {
n = trials
p = prob
if((n*p+p)%%1==0) {
m = n*p+p
mode = c(m,m-1)
return(mode)
}
if((n*p+p)%%1!=0) {
m = n*p+p-((n*p+p)%%1)
return(m)
}
}
# Title: mode
# Description: calculate mode
# Input
#  trials: number of trials
#  prob: probability of success
# Output
#  mode: mode of success
aux_mode = function(trials, prob) {
n = trials
p = prob
if((n*p+p)%%1==0) {
m = n*p+p
mode = c(m,m-1)
return(mode)
}
if((n*p+p)%%1!=0) {
m = n*p+p-((n*p+p)%%1)
return(m)
}
}
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
cum = bin_cumulative(2,.5)
library(binomial)
devtools::document()
devtools::check_man()
devtools::test()
library(binomial)
variables = bin_variable(trials = 2,prob = .5)
variables
summary(variables)
bin_variance(trials = 2,prob = .5)
bin_mean(trials = 2,prob = .5)
bin_mode(trials = 2,prob = .5)
bin_skewness(trials = 2,prob = .5)
bin_kurtosis(trials = 2,prob = .5)
bin_choose(n = 5, k = 2)
bin_probability(1,2,.5)
dis = bin_distribution(2,.5)
dis
plot(dis)
cum = bin_cumulative(2,.5)
cum
plot(cum)
cum = bin_cumulative(2,.5)
cum
plot(cum)
devtools::document()
devtools::check_man()
devtools::test()
devtools::build_vignettes()
devtools::build_vignettes()
install.packages('Rtools')
install.packages('Rtools')
