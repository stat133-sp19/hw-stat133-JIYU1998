}
#relative frequencies of number of blue balls
dat = data.frame(
reps =1:repetition,
number = blue,
freqs0 = cumsum(blue == 0)/1:repetition,
freqs1 = cumsum(blue == 1)/1:repetition,
freqs2 = cumsum(blue == 2)/1:repetition,
freqs3 = cumsum(blue == 3)/1:repetition,
freqs4 = cumsum(blue == 4)/1:repetition
)
library(ggplot2)
ggplot(dat)+
geom_line(aes(x = reps, y = freqs0),color = '#e03023')+
geom_line(aes(x = reps, y = freqs1),color = '#d4d863')+
geom_line(aes(x = reps, y = freqs2),color = '#24ed0e')+
geom_line(aes(x = reps, y = freqs3),color = '#0be1ed')+
geom_line(aes(x = reps, y = freqs4),color = '#a50bdd')
#plot(x = dat$reps,y = dat$freqs0,color = 'red')
bag1 = c('white','white','red')
bag2 = c(rep('white',3),'red')
bags = c('bag1','bag2')
repetition = 1000
drawn_balls = character(repetition)
set.seed(345)
for (i in 1:repetition) {
#select a bag
chosen_bag = sample(bags,1)
#draw a ball from the chosen bag
if(chosen_bag == 'bag1'){
drawn_balls[i] = sample(bag1,1)
}else{
drawn_balls[i] = sample(bag2,1)
}
}
table(drawn_balls)/repetition
#Your turn
boxes = c('box1','box2')
box1 = c('blue','blue','red')
box2 = c('blue','blue','red','red','red','white')
repetition = 1000
balls = matrix(character(repetition),1000,4)
set.seed(12345)
for (i in 1:1000) {
a = runif(1)
if(a>.5) {
balls[i,] = sample(box1,4,replace = T)
} else {balls[i,] = sample(box2, 4,replace = F)}
}
head(balls,5)
blue = rep(0,repetition)
freqs = matrix(0,1000,5)
for (i in 1:repetition) {
blue[i] = sum(balls[i,]==rep('blue',4))
}
#relative frequencies of number of blue balls
dat = data.frame(
reps =1:repetition,
number = blue,
freqs0 = cumsum(blue == 0)/1:repetition,
freqs1 = cumsum(blue == 1)/1:repetition,
freqs2 = cumsum(blue == 2)/1:repetition,
freqs3 = cumsum(blue == 3)/1:repetition,
freqs4 = cumsum(blue == 4)/1:repetition
)
library(ggplot2)
ggplot(dat)+
geom_line(aes(x = reps, y = freqs0),color = '#e03023')+
geom_line(aes(x = reps, y = freqs1),color = '#d4d863')+
geom_line(aes(x = reps, y = freqs2),color = '#24ed0e')+
geom_line(aes(x = reps, y = freqs3),color = '#0be1ed')+
geom_line(aes(x = reps, y = freqs4),color = '#a50bdd')
ggplot(dat,aes(fill = number))+
geom_line(aes(x = reps, y = freqs0))+
geom_line(aes(x = reps, y = freqs1))+
geom_line(aes(x = reps, y = freqs2))+
geom_line(aes(x = reps, y = freqs3))+
geom_line(aes(x = reps, y = freqs4))
#plot(x = dat$reps,y = dat$freqs0,color = 'red')
ggplot(dat,aes(fill = number))+
geom_line(aes(x = reps, y = freqs0))+
geom_line(aes(x = reps, y = freqs1))+
geom_line(aes(x = reps, y = freqs2))+
geom_line(aes(x = reps, y = freqs3))+
geom_line(aes(x = reps, y = freqs4))
ggplot(dat,aes(color = number))+
geom_line(aes(x = reps, y = freqs0))+
geom_line(aes(x = reps, y = freqs1))+
geom_line(aes(x = reps, y = freqs2))+
geom_line(aes(x = reps, y = freqs3))+
geom_line(aes(x = reps, y = freqs4))
plot(x = dat$reps, y = dat$freqs0,color = '#e03023')
plot(x = dat$reps, y = dat$freqs1,color = '#d4d863')
plot(x = dat$reps, y = dat$freqs2,color = '#24ed0e')
plot(x = dat$reps, y = dat$freqs3,color = '#0be1ed')
plot(x = dat$reps, y = dat$freqs4,color = '#a50bdd')
dat = data.frame(
reps =1:repetition,
number = as.factor(blue),
freqs0 = cumsum(blue == 0)/1:repetition,
freqs1 = cumsum(blue == 1)/1:repetition,
freqs2 = cumsum(blue == 2)/1:repetition,
freqs3 = cumsum(blue == 3)/1:repetition,
freqs4 = cumsum(blue == 4)/1:repetition
)
library(ggplot2)
ggplot(dat,aes(color = number))+
geom_line(aes(x = reps, y = freqs0))+
geom_line(aes(x = reps, y = freqs1))+
geom_line(aes(x = reps, y = freqs2))+
geom_line(aes(x = reps, y = freqs3))+
geom_line(aes(x = reps, y = freqs4))
bag1 = c('white','white','red')
bag2 = c(rep('white',3),'red')
bags = c('bag1','bag2')
repetition = 1000
drawn_balls = character(repetition)
set.seed(345)
for (i in 1:repetition) {
#select a bag
chosen_bag = sample(bags,1)
#draw a ball from the chosen bag
if(chosen_bag == 'bag1'){
drawn_balls[i] = sample(bag1,1)
}else{
drawn_balls[i] = sample(bag2,1)
}
}
table(drawn_balls)/repetition
#Your turn
boxes = c('box1','box2')
box1 = c('blue','blue','red')
box2 = c('blue','blue','red','red','red','white')
repetition = 1000
balls = matrix(character(repetition),1000,4)
set.seed(12345)
for (i in 1:1000) {
a = runif(1)
if(a>.5) {
balls[i,] = sample(box1,4,replace = T)
} else {balls[i,] = sample(box2, 4,replace = F)}
}
head(balls,5)
blue = rep(0,repetition)
freqs = matrix(0,1000,5)
for (i in 1:repetition) {
blue[i] = sum(balls[i,]==rep('blue',4))
}
#relative frequencies of number of blue balls
dat = data.frame(
reps =1:repetition,
number = as.factor(blue),
freqs0 = cumsum(blue == 0)/1:repetition,
freqs1 = cumsum(blue == 1)/1:repetition,
freqs2 = cumsum(blue == 2)/1:repetition,
freqs3 = cumsum(blue == 3)/1:repetition,
freqs4 = cumsum(blue == 4)/1:repetition
)
##library(ggplot2)
#ggplot(dat)+
# geom_line(aes(x = reps, y = freqs0),color = '#e03023')+
#geom_line(aes(x = reps, y = freqs1),color = '#d4d863')+
#geom_line(aes(x = reps, y = freqs2),color = '#24ed0e')+
#geom_line(aes(x = reps, y = freqs3),color = '#0be1ed')+
#geom_line(aes(x = reps, y = freqs4),color = '#a50bdd')
library(ggplot2)
ggplot(dat,aes(x = reps,color = number))+
geom_line(aes(y = freqs0))+
geom_line(aes(x = reps, y = freqs1))+
geom_line(aes(x = reps, y = freqs2))+
geom_line(aes(x = reps, y = freqs3))+
geom_line(aes(x = reps, y = freqs4))
ggplot(dat,aes(x = reps,color = number))+
geom_line(aes(x = reps,y = freqs0))
library(ggplot2)
ggplot(dat,aes(x = reps))+
geom_line(aes(x = reps,y = freqs0))+
geom_line(aes(x = reps, y = freqs1))+
geom_line(aes(x = reps, y = freqs2))+
geom_line(aes(x = reps, y = freqs3))+
geom_line(aes(x = reps, y = freqs4))
plot(type = line,x = dat$reps, y = dat$freqs0,color = '#e03023')
plot(x = dat$reps, y = dat$freqs0,type = line,color = '#e03023')
plot(x = dat$reps, y = dat$freqs0,type = 'line',color = '#e03023')
plot(x = dat$reps, y = dat$freqs0,type = 'line',color = 'red')
plot(x = dat$reps, y = dat$freqs0,type = 'line',colour = '#e03023')
plot(x = dat$reps, y = dat$freqs0,type = 'line',col = '#e03023')
plot(x = dat$reps, y = dat$freqs0,type = 'l',col = '#e03023')
plot(x = dat$reps, y = dat$freqs0,type = 'l',col = '#e03023')
plot(x = dat$reps, y = dat$freqs1,type = 'l',col = '#d4d863')
plot(x = dat$reps, y = dat$freqs2,type = 'l',col = '#24ed0e')
plot(x = dat$reps, y = dat$freqs0,type = 'l',col = '#e03023')+
plot(x = dat$reps, y = dat$freqs1,type = 'l',col = '#d4d863')+
plot(x = dat$reps, y = dat$freqs2,type = 'l',col = '#24ed0e')
plot(x = dat$reps, y = dat$freqs0,type = 'l',col = '#e03023')
lines(x = dat$reps, y = dat$freqs1,col = '#d4d863')
lines(x = dat$reps, y = dat$freqs2,col = '#24ed0e')
lines(x = dat$reps, y = dat$freqs3,col = '#0be1ed')
lines(x = dat$reps, y = dat$freqs4,col = '#a50bdd')
legend("right",legend=c("number 0","number 1","number 2","number 3","number 4")
plot(x = dat$reps, y = dat$freqs0,type = 'l',col = '#e03023')
bag1 = c('white','white','red')
bag2 = c(rep('white',3),'red')
bags = c('bag1','bag2')
repetition = 1000
drawn_balls = character(repetition)
set.seed(345)
for (i in 1:repetition) {
#select a bag
chosen_bag = sample(bags,1)
#draw a ball from the chosen bag
if(chosen_bag == 'bag1'){
drawn_balls[i] = sample(bag1,1)
}else{
drawn_balls[i] = sample(bag2,1)
}
}
table(drawn_balls)/repetition
#Your turn
boxes = c('box1','box2')
box1 = c('blue','blue','red')
box2 = c('blue','blue','red','red','red','white')
repetition = 1000
balls = matrix(character(repetition),1000,4)
set.seed(12345)
for (i in 1:1000) {
a = runif(1)
if(a>.5) {
balls[i,] = sample(box1,4,replace = T)
} else {balls[i,] = sample(box2, 4,replace = F)}
}
head(balls,5)
blue = rep(0,repetition)
freqs = matrix(0,1000,5)
for (i in 1:repetition) {
blue[i] = sum(balls[i,]==rep('blue',4))
}
#relative frequencies of number of blue balls
dat = data.frame(
reps =1:repetition,
number = as.factor(blue),
freqs0 = cumsum(blue == 0)/1:repetition,
freqs1 = cumsum(blue == 1)/1:repetition,
freqs2 = cumsum(blue == 2)/1:repetition,
freqs3 = cumsum(blue == 3)/1:repetition,
freqs4 = cumsum(blue == 4)/1:repetition
)
library(ggplot2)
ggplot(dat)+
geom_line(aes(x = reps, y = freqs0),color = '#e03023')+
geom_line(aes(x = reps, y = freqs1),color = '#d4d863')+
geom_line(aes(x = reps, y = freqs2),color = '#24ed0e')+
geom_line(aes(x = reps, y = freqs3),color = '#0be1ed')+
geom_line(aes(x = reps, y = freqs4),color = '#a50bdd')
library(ggplot2)
ggplot(dat,aes(x = reps))+
geom_line(aes(x = reps,y = freqs0))+
geom_line(aes(x = reps, y = freqs1))+
geom_line(aes(x = reps, y = freqs2))+
geom_line(aes(x = reps, y = freqs3))+
geom_line(aes(x = reps, y = freqs4))
plot(x = dat$reps, y = dat$freqs0,type = 'l',col = '#e03023')
lines(x = dat$reps, y = dat$freqs1,col = '#d4d863')
lines(x = dat$reps, y = dat$freqs2,col = '#24ed0e')
lines(x = dat$reps, y = dat$freqs3,col = '#0be1ed')
lines(x = dat$reps, y = dat$freqs4,col = '#a50bdd')
legend("right",legend=c("number 0","number 1","number 2","number 3","number 4"))
dat = data.frame(
reps =rep(1:repetition,5),
number = c(rep(0,repetition),rep(1,repetition),rep(2,repetition),rep(3,repetition),rep(4,repetition)),
freqs = c(freqs0,freqs1,freqs2,freqs3,freqs4)
)
freqs0 = cumsum(blue == 0)/1:repetition
freqs1 = cumsum(blue == 1)/1:repetition
freqs2 = cumsum(blue == 2)/1:repetition
freqs3 = cumsum(blue == 3)/1:repetition
freqs4 = cumsum(blue == 4)/1:repetition
dat = data.frame(
reps =rep(1:repetition,5),
number = c(rep(0,repetition),rep(1,repetition),rep(2,repetition),rep(3,repetition),rep(4,repetition)),
freqs = c(freqs0,freqs1,freqs2,freqs3,freqs4)
)
library(ggplot2)
ggplot(dat,aes(x = reps, y = freqs,color = number))
dat = data.frame(
reps =rep(1:repetition,5),
number = c(rep(0,repetition),rep(1,repetition),rep(2,repetition),rep(3,repetition),rep(4,repetition)),
freqs = c(freqs0,freqs1,freqs2,freqs3,freqs4)
)
library(ggplot2)
ggplot(dat,aes(x = reps, y = freqs,color = number))+
geom_line()
dat = data.frame(
reps =rep(1:repetition,5),
number = as.factor(c(rep(0,repetition),rep(1,repetition),rep(2,repetition),rep(3,repetition),rep(4,repetition))),
freqs = c(freqs0,freqs1,freqs2,freqs3,freqs4)
)
library(ggplot2)
ggplot(dat,aes(x = reps, y = freqs,color = number))+
geom_line()
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v2.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v2.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v2.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v1.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v1.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v1.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v2.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v2.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v2.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v3.R')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/shinyApp-yu-ji/app-v1.R')
shiny::runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
year = 3
1:year+1
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Money Balance"),
# Sidebar with a slider input for number of bins
sliderInput("initial",
"Initial Amount",
min = 0,
max = 100000,
step = 500,
value = 1000),
sliderInput('year','Years',
min = 0,max=50,step = 1,value = 20),
sliderInput('return','Return Rate (in %)',min = 0,max = 20,step = 0.1,value = 5),
sliderInput('growth','Growth Rate (in %)',min = 0,max = 20,step = 0.1,value = 2),
selectInput('facet','Facet?',choices = c('No','Yes'),selected = 'No'),
sliderInput('contribution',
'Annual Contribution',
min = 0,
max = 50000,
step = 500,
value = 2000),
plotOutput('plot'),
tableOutput('table')
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$plot =  renderPlot(
{
initial = input$initial
year = input$year
growth = input$growth
return = input$return
contribution = input$contribution
facet = input$facet
#
future_value = function(amount, rate, years) {
fv = amount*(1+rate)^years
return(fv)
}
#
annuity = function(contrib, rate, years) {
fv = contrib*((1+rate)^years-1)/rate
return(fv)
}
#
growing_annuity = function(contrib, rate, growth, years) {
fv = contrib*((1+rate)^years-(1+growth)^years)/(rate-growth)
return(fv)
}
#
#
no_contrib = rep(initial,year+1)
for (i in 2:(year+1)) {
no_contrib[i] =  future_value(amount = initial, rate = return, years = i-1)
}
fixed_contrib = rep(initial,year+1)
for (i in 2:(year+1)) {
fixed_contrib[i]  = future_value(initial, return, i-1)+annuity(contribution, return,i-1)
}
growing_contrib = rep(initial,year+1)
for (i in 2:(year+1)) {
growing_contrib[i] = future_value(initial,return,i-1) + growing_annuity(contribution, return,growth, i-1)
}
#
dat = data.frame(
balance = c(no_contrib,fixed_contrib,growing_contrib),
year = rep(0:(year+1),3),
modality = c(rep("no_contrib", year+1), rep("fixed_contrib",year+1), rep("growing_contrib",year+1),rep("no_contrib", year+1))
)
if(facet == 'Yes') {
gg= ggplot(dat)+
geom_point(aes(x = year,  y  = balance, color = modality), cex = 0.5)+
geom_line(aes(x = year, y = balance,color = modality))+
facet_wrap(~modality)+
labs(x = 'year', y = 'balance',title = 'Balance unber Different Rates and Modalities')
gg
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
initial = 1000
year = 20
return = .05
growth = .02
facet = 'yes'
contribution = 2000
#
future_value = function(amount, rate, years) {
fv = amount*(1+rate)^years
return(fv)
}
#
annuity = function(contrib, rate, years) {
fv = contrib*((1+rate)^years-1)/rate
return(fv)
}
#
growing_annuity = function(contrib, rate, growth, years) {
fv = contrib*((1+rate)^years-(1+growth)^years)/(rate-growth)
return(fv)
}
#
#
no_contrib = rep(initial,year+1)
for (i in 2:(year+1)) {
no_contrib[i] =  future_value(amount = initial, rate = return, years = i-1)
}
fixed_contrib = rep(initial,year+1)
for (i in 2:(year+1)) {
fixed_contrib[i]  = future_value(initial, return, i-1)+annuity(contribution, return,i-1)
}
growing_contrib = rep(initial,year+1)
for (i in 2:(year+1)) {
growing_contrib[i] = future_value(initial,return,i-1) + growing_annuity(contribution, return,growth, i-1)
}
#
dat = data.frame(
balance = c(no_contrib,fixed_contrib,growing_contrib),
year = rep(0:year,3),
modality = c(rep("no_contrib", year+1), rep("fixed_contrib",year+1), rep("growing_contrib",year+1))
)
dat$modality = factor(dat$modality, levels = c('no_contrib','fixed_contrib','growing_contrib'))
library(ggplot2)
if(facet == 'Yes') {
gg= ggplot(dat)+
geom_point(aes(x = year,  y = balance, color = modality), cex = 0.5)+
geom_line(aes(x = year, y = balance,color = modality))+
facet_wrap(~modality)+
labs(x = 'year', y = 'balance',title = 'Balance unber Different Rates and Modalities')
gg
gg
library(ggplot2)
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
>
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
2:(year+1)
no_contrib
fixed_contrib
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
shiny::runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/money')
shiny::runApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/workout2-yu-ji')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='yu-ji', token='98118262A1658C7AD73A1C8320B5CD30', secret='n6eE85E0B6BCF1DV0YCWYOkbqS+Nm7D4+Q4QatrZ')
setwd("C:/Users/dell/Desktop/STAT133/LabsWarmups/workout2-yu-ji")
rsconnect::deployApp('C:/Users/dell/Desktop/STAT133/LabsWarmups/workout2-yu-ji')
